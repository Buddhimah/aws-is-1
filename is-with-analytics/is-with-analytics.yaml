AWSTemplateFormatVersion: 2010-09-09
Description: >-
  WSO2 Identity Server deployment with Analytics
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Cluster Configurations
        Parameters:
          - AWSAccessKeyId
          - AWSAccessKeySecret
          - KeyPairName
          - WSO2InstanceType
      - Label:
          default: Network Configurations
        Parameters:
          - CertificateName
      - Label:
          default: Database Configurations
        Parameters:
          - DBUsername
          - DBPassword
          - DBEngine
          - DBEngineVersion
      - Label:
          default: Other Configurations
        Parameters:
          - JDK
          - WUMUsername
          - WUMPassword
    ParameterLabels:
      AWSAccessKeyId:
        default: AWS Access Key ID
      AWSAccessKeySecret:
        default: AWS Access Secret Key
      CertificateName:
        default: Server Certificate Name
      KeyPairName:
        default: Key Pair Name
      DBUsername:
        default: Database Master Username
      DBPassword:
        default: Database Master Password
      DBEngine:
        default: Database Engine
      DBEngineVersion:
        default: Database Engine Version
      JDK:
        default: JDK Version
      WUMUsername:
        default: WUM Username
      WUMPassword:
        default: WUM Password
      WSO2InstanceType:
        default: WSO2 Instance Type
Resources:
  # networking configurations
  WSO2ISVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  WSO2ISPublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2ISVPC
      CidrBlock: 10.0.254.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2ISPublicSubnet2:
      Type: 'AWS::EC2::Subnet'
      Properties:
        VpcId: !Ref WSO2ISVPC
        CidrBlock: 10.0.252.0/24
        AvailabilityZone: !Select
          - '1'
          - !GetAZs ''
  WSO2ISPublicInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  WSO2ISPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2ISVPC
  WSO2ISPublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2ISPublicRouteTable
      SubnetId: !Ref WSO2ISPublicSubnet1
  WSO2ISPublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2ISPublicRouteTable
      SubnetId: !Ref WSO2ISPublicSubnet2
  WSO2ISPublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WSO2ISPublicRouteTable
      GatewayId: !Ref WSO2ISPublicInternetGateway
      DestinationCidrBlock: 0.0.0.0/0
    DependsOn: WSO2ISVPCInternetGatewayAttachment
  WSO2ISVPCInternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref WSO2ISPublicInternetGateway
      VpcId: !Ref WSO2ISVPC
  WSO2ISPrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2ISVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
  WSO2ISPrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref WSO2ISVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
  WSO2ISPrivateSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2ISVPC
  WSO2ISPrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref WSO2ISNATGateway
      RouteTableId: !Ref WSO2ISPrivateSubnetRouteTable
  WSO2ISPrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2ISPrivateSubnetRouteTable
      SubnetId: !Ref WSO2ISPrivateSubnet1
  WSO2ISPrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2ISPrivateSubnetRouteTable
      SubnetId: !Ref WSO2ISPrivateSubnet2
  WSO2ISNATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - WSO2ISEIP
        - AllocationId
      SubnetId: !Ref WSO2ISPublicSubnet1
  WSO2BastionEIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt WSO2BastionEIP.AllocationId
      InstanceId: !Ref WSO2BastionInstance
  WSO2ISEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  WSO2BastionEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  # database configurations
  WSO2ISDBInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupDescription: DB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
  WSO2ISDBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      VPCSecurityGroups:
        - !Ref WSO2ISDBInstanceSecurityGroup
      DBInstanceClass: db.t2.medium
      AllocatedStorage: 5
      BackupRetentionPeriod: '0'
      DBInstanceIdentifier: WSO2ISDBInstance
      DBName: WSO2_IS_DB
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: 'true'
      StorageType: gp2
      DBSubnetGroupName: !Ref WSO2ISDBSubnetGroup
  WSO2ISAnalyticsDBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      VPCSecurityGroups:
        - !Ref WSO2ISDBInstanceSecurityGroup
      DBInstanceClass: db.t2.medium
      AllocatedStorage: 5
      BackupRetentionPeriod: '0'
      DBInstanceIdentifier: WSO2ISAnalyticsDBInstance
      DBName: WSO2_IS_ANALYTICS_DB
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: 'true'
      StorageType: gp2
      DBSubnetGroupName: !Ref WSO2ISDBSubnetGroup
  WSO2ISDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: DB Subnet Group
      SubnetIds:
        - !Ref WSO2ISPrivateSubnet1
        - !Ref WSO2ISPrivateSubnet2
  # File system configurations
  WSO2ISEFSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupDescription: EFS Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2049'
        ToPort: '2049'
        CidrIp: 0.0.0.0/0
  WSO2ISEFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      PerformanceMode: generalPurpose
  WSO2ISAnalyticsEFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      PerformanceMode: generalPurpose
  WSO2ISPrivateSubnet1EFSMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Ref WSO2ISPrivateSubnet1
      FileSystemId: !Ref WSO2ISEFSFileSystem
      SecurityGroups:
        - !Ref WSO2ISEFSSecurityGroup
  WSO2ISPrivateSubnet2EFSMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Ref WSO2ISPrivateSubnet2
      FileSystemId: !Ref WSO2ISEFSFileSystem
      SecurityGroups:
        - !Ref WSO2ISEFSSecurityGroup
  WSO2ISAnalyticsPrivateSubnet1EFSMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Ref WSO2ISPrivateSubnet1
      FileSystemId: !Ref WSO2ISAnalyticsEFSFileSystem
      SecurityGroups:
        - !Ref WSO2ISEFSSecurityGroup
  # Product configurations
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupDescription: WSO2 Bastion Node Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WSO2ISSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupName: WSO2SecurityGroup
      GroupDescription: WSO2 Identity Server Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          SourceSecurityGroupId: !Ref WSO2ISLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          SourceSecurityGroupId: !Ref WSO2ISLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          SourceSecurityGroupId: !Ref WSO2ISLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          SourceSecurityGroupId: !Ref WSO2ISLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '5672'
          ToPort: '5672'
          SourceSecurityGroupId: !Ref WSO2ISLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
  WSO2BastionInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: ami-075f715f2a2357254
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: WSO2BastionInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2ISPublicSubnet1
          GroupSet:
            - !Ref BastionSecurityGroup
  PuppetMaster:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !FindInMap
        - WSO2PuppetMasterRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: PuppetMasterInstance
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2ISPrivateSubnet1
          GroupSet:
            - !Ref PuppetMasterSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - echo "> Set hostname to puppetmaster"
            - hostname puppetmaster
            - echo $(hostname) >> /etc/hostname
            - echo "127.0.0.1 $(hostname)" >> /etc/hosts
            - sed -i '/\[main\]/a dns_alt_names=puppetmaster,puppet\nenvironmentpath=$confdir/environments\nhiera_config=/etc/puppet/hiera.yaml' /etc/puppet/puppet.conf
            - sed -i '/\[master\]/a autosign=true' /etc/puppet/puppet.conf
            - service puppetmaster restart
            - !Sub "./home/ubuntu/is-init.sh ${WUMUsername} ${WUMPassword}"
            - !Sub "./home/ubuntu/is-analytics-init.sh ${WUMUsername} ${WUMPassword}"
            - !Join
              - ''
              - - sed -i "s/access-key/
                - !Ref AWSAccessKeyId
                - /g" /etc/puppet/hieradata/dev/wso2/wso2is/pattern-2/default.yaml
            - !Join
              - ''
              - - sed -i "s/access-key/
                - !Ref AWSAccessKeyId
                - /g" /etc/puppet/hieradata/dev/wso2/wso2is_analytics/pattern-1/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_DB_HOST/
                - !GetAtt
                  - WSO2ISAnalyticsDBInstance
                  - Endpoint.Address
                - /g" /etc/puppet/hieradata/dev/wso2/wso2is_analytics/pattern-1/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_ELB_DNS_NAME/
                - !GetAtt
                  - WSO2ISLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2is/pattern-2/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_ELB_DNS_NAME/
                - !GetAtt
                  - WSO2ISAnalyticsLoadBalancer
                  - DNSName
                - >-
                  /g"
                  /etc/puppet/hieradata/dev/wso2/wso2is_analytics/pattern-1/default.yaml
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s/JDK_VERSION/
                - !Ref JDK
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s/CF_RDS_URL/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Address
                - /g" /etc/puppet/hieradata/dev/wso2/common.yaml
            - !Join
              - ''
              - - sed -i "s^secretkey^
                - !Ref AWSAccessKeySecret
                - ^g" /etc/puppet/hieradata/dev/wso2/wso2is/pattern-2/default.yaml
            - !Join
              - ''
              - - sed -i "s^secretkey^
                - !Ref AWSAccessKeySecret
                - ^g" /etc/puppet/hieradata/dev/wso2/wso2is_analytics/pattern-1/default.yaml
  PuppetMasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupDescription: WSO2 PuppetMaster Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
  WSO2ISNode1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2ISAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2ISSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get install -y nfs-common
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh ${JDK}"
            - mkdir -p /mnt/efs
            - !Sub "mount -t nfs4 -o nfsvers=4.1 ${WSO2ISEFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs"
            - export DB_NAME=WSO2_IS_DB
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_is.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_is.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_is.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_is.sh
            - sleep 400
            - sudo /opt/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_is.sh
            - sleep 10
            - 'if [ ! -d "/mnt/efs/deployment" ]; then'
            - '    mkdir -p /mnt/efs/deployment'
            - '    cp -r /mnt/wso2is-5.5.0/repository/deployment/ /mnt/efs'
            - fi
            - >-
              rm -rf
              /mnt/wso2is-5.5.0/repository/deployment/
            - >-
              ln -s /mnt/efs/deployment
              /mnt/wso2is-5.5.0/repository/deployment
            - 'if [ ! -d "/mnt/efs/tenants" ]; then'
            - '    mkdir -p /mnt/efs/tenants'
            - '    cp -r /mnt/wso2is-5.5.0/repository/tenants /mnt/efs'
            - fi
            - >-
              rm -rf
              /mnt/wso2is-5.5.0/repository/deployment/tenants
            - >-
              ln -s /mnt/efs/tenants
              /mnt/wso2is-5.5.0/repository/tenants
            - apt-get install -y python3-pip
            - pip3 install boto3
            - !Sub "ANALYTICS_PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2ISAnalyticsInstance1)"
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-RoleData.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-AuthenticationData.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-SessionData.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-UserData.xml
            - /mnt/wso2is-5.5.0/bin/wso2server.sh start
            - mkdir -p /home/ubuntu/final
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2ISAnalyticsNode1AutoScalingGroup
      - WSO2ISSecurityGroup
      - WSO2ISLoadBalancer
      - WSO2ISVPCInternetGatewayAttachment
      - WSO2ISDBInstance
      - PuppetMaster
  WSO2ISNode1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2ISNode1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2ISLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2ISPrivateSubnet1
      Tags:
        - Key: Name
          Value: WSO2ISInstance1
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: is
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2ISLoadBalancer
      - WSO2ISNode1LaunchConfiguration
  WSO2ISNode2LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2ISAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2ISSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - apt-get install -y nfs-common
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh ${JDK}"
            - mkdir -p /mnt/efs
            - !Sub "mount -t nfs4 -o nfsvers=4.1 ${WSO2ISEFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs"
            - export DB_NAME=WSO2_IS_DB
            - !Join
              - ''
              - - export DB_HOSTNAME=
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Address
            - !Join
              - ''
              - - export DB_PORT=
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Port
            - !Join
              - ''
              - - export DB_USERNAME=
                - !Ref DBUsername
            - !Join
              - ''
              - - export DB_PASSWORD=
                - !Ref DBPassword
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_is.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_is.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_is.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_is.sh
            - sleep 400
            - sudo /opt/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_is.sh
            - sleep 10
            - 'if [ ! -d "/mnt/efs/deployment" ]; then'
            - '    mkdir -p /mnt/efs/deployment'
            - '    cp -r /mnt/wso2is-5.5.0/repository/deployment/ /mnt/efs'
            - fi
            - >-
              rm -rf
              /mnt/wso2is-5.5.0/repository/deployment/
            - >-
              ln -s /mnt/efs/deployment
              /mnt/wso2is-5.5.0/repository/deployment
            - 'if [ ! -d "/mnt/efs/tenants" ]; then'
            - '    mkdir -p /mnt/efs/tenants'
            - '    cp -r /mnt/wso2is-5.5.0/repository/tenants /mnt/efs'
            - fi
            - >-
              rm -rf
              /mnt/wso2is-5.5.0/repository/deployment/tenants
            - >-
              ln -s /mnt/efs/tenants
              /mnt/wso2is-5.5.0/repository/tenants
            - apt-get install -y python3-pip
            - pip3 install boto3
            - !Sub "PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2ISInstance2)"
            - !Sub "ANALYTICS_PRIVATE_IP=$(python3 /usr/local/bin/private_ip_extractor.py ${AWS::Region} ${AWSAccessKeyId} ${AWSAccessKeySecret} WSO2ISAnalyticsInstance2)"
            - !Join
              - ''
              - - sed -i "s/LOCAL_MEMBER_HOST/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/conf/axis2/axis2.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-RoleData.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-AuthenticationData.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-SessionData.xml
            - !Join
              - ''
              - - sed -i "s/CF_ANALYTICS_IP/
                - $ANALYTICS_PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-5.5.0/repository/deployment/server/eventpublishers/IsAnalytics-Publisher-wso2event-UserData.xml
            - /mnt/wso2is-5.5.0/bin/wso2server.sh start
            - mkdir -p /home/ubuntu/final
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2ISNode1LaunchConfiguration
      - WSO2ISAnalyticsNode2AutoScalingGroup
      - WSO2ISSecurityGroup
      - WSO2ISLoadBalancer
      - WSO2ISVPCInternetGatewayAttachment
      - WSO2ISDBInstance
      - PuppetMaster
  WSO2ISNode2AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2ISNode2LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2ISLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2ISPrivateSubnet2
      Tags:
        - Key: Name
          Value: WSO2ISInstance2
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: is
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2ISLoadBalancer
      - WSO2ISNode2LaunchConfiguration
  WSO2ISAnalyticsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupName: WSO2AnalyticsSecurityGroup
      GroupDescription: WSO2 Identity Server Analytics Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4040'
          ToPort: '4040'
          SourceSecurityGroupId: !Ref WSO2ISAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '8140'
          ToPort: '8140'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          SourceSecurityGroupId: !Ref WSO2ISAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          SourceSecurityGroupId: !Ref WSO2ISAnalyticsLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: '7611'
          ToPort: '7611'
          SourceSecurityGroupId: !Ref WSO2ISSecurityGroup
        - IpProtocol: tcp
          FromPort: '7711'
          ToPort: '7711'
          SourceSecurityGroupId: !Ref WSO2ISSecurityGroup
  WSO2ISAnalyticsNode1LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2ISAnalyticsAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2ISAnalyticsSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - export DB_NAME=WSO2_IS_ANALYTICS_DB
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh ${JDK}"
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2ISAnalyticsDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_analytics.sh
            - sleep 400
            - sudo /opt/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_analytics.sh
            - sleep 10
            - !Join
              - ''
              - - sed -i "s/LOCAL_MEMBER_HOST/
                - $PRIVATE_IP
                - >-
                  /g"
                  /mnt/wso2is-analytics-5.5.0/repository/conf/axis2/axis2.xml
            - /mnt/wso2is-analytics-5.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2ISAnalyticsSecurityGroup
      - WSO2ISAnalyticsLoadBalancer
      - WSO2ISVPCInternetGatewayAttachment
      - WSO2ISDBInstance
      - PuppetMaster
  WSO2ISAnalyticsNode1AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2ISAnalyticsNode1LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2ISAnalyticsLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2ISPrivateSubnet1
      Tags:
        - Key: Name
          Value: WSO2ISAnalyticsInstance1
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: is
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2ISAnalyticsLoadBalancer
      - WSO2ISAnalyticsNode1LaunchConfiguration
  WSO2ISAnalyticsNode2LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - WSO2ISAnalyticsAMIRegionMap
        - !Ref 'AWS::Region'
        - Ubuntu140464bit
      InstanceType: !Ref WSO2InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '20'
            VolumeType: gp2
            DeleteOnTermination: 'true'
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref WSO2ISAnalyticsSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - 'export PATH=~/.local/bin:$PATH'
            - apt-get update
            - sed -i '/\[main\]/a server=puppet' /etc/puppet/puppet.conf
            - export DB_NAME=WSO2_IS_ANALYTICS_DB
            - !Join
              - ''
              - - export PuppetmasterIP=
                - !GetAtt
                  - PuppetMaster
                  - PrivateIp
            - echo "${PuppetmasterIP} puppet puppetmaster" >> /etc/hosts
            - !Sub "./home/ubuntu/set_jdk.sh ${JDK}"
            - !Join
              - ''
              - - sed -i "s/CF_DB_USERNAME/
                - !Ref DBUsername
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PASSWORD/
                - !Ref DBPassword
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_HOST/
                - !GetAtt
                  - WSO2ISAnalyticsDBInstance
                  - Endpoint.Address
                - /g" /usr/local/bin/provision_db_analytics.sh
            - !Join
              - ''
              - - sed -i "s/CF_DB_PORT/
                - !GetAtt
                  - WSO2ISDBInstance
                  - Endpoint.Port
                - /g" /usr/local/bin/provision_db_analytics.sh
            - sleep 400
            - sudo /opt/setup.sh start
            - sleep 30
            - bash /usr/local/bin/provision_db_analytics.sh
            - sleep 10
            - /mnt/wso2is-analytics-5.5.0/bin/wso2server.sh start
            - echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile.d/history.sh
            - cat /dev/null > ~/.bash_history && history -c
    DependsOn:
      - WSO2ISAnalyticsNode1LaunchConfiguration
      - WSO2ISAnalyticsSecurityGroup
      - WSO2ISAnalyticsLoadBalancer
      - WSO2ISVPCInternetGatewayAttachment
      - WSO2ISDBInstance
      - PuppetMaster
  WSO2ISAnalyticsNode2AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref WSO2ISAnalyticsNode2LaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
        - !Ref WSO2ISAnalyticsLoadBalancer
      VPCZoneIdentifier:
        - !Ref WSO2ISPrivateSubnet2
      Tags:
        - Key: Name
          Value: WSO2ISAnalyticsInstance2
          PropagateAtLaunch: 'true'
        - Key: cluster
          Value: is
          PropagateAtLaunch: 'true'
    DependsOn:
      - WSO2ISAnalyticsLoadBalancer
      - WSO2ISAnalyticsNode2LaunchConfiguration
  WSO2ISLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupDescription: WSO2 IS ELB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
  WSO2ISLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: true
      SecurityGroups:
        - !Ref WSO2ISLoadBalancerSecurityGroup
      Subnets:
        - !Ref WSO2ISPublicSubnet2
        - !Ref WSO2ISPublicSubnet1
      LBCookieStickinessPolicy:
        - PolicyName: LBStickyPolicy
      Listeners:
        - LoadBalancerPort: '9763'
          InstancePort: '9763'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '8280'
          InstancePort: '8280'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '9443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
        - LoadBalancerPort: '8243'
          InstancePort: '8243'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
      HealthCheck:
          Target: 'TCP:9763'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '10'
          Timeout: '5'
    DependsOn:
      - WSO2ISLoadBalancerSecurityGroup
  WSO2ISAnalyticsLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref WSO2ISVPC
      GroupDescription: WSO2 IS Analytics ELB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4040'
          ToPort: '4040'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '9763'
          ToPort: '9763'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4040'
          ToPort: '4040'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5701'
          ToPort: '5701'
          CidrIp: 0.0.0.0/0
  WSO2ISAnalyticsLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: true
      SecurityGroups:
        - !Ref WSO2ISAnalyticsLoadBalancerSecurityGroup
      Subnets:
        - !Ref WSO2ISPublicSubnet2
        - !Ref WSO2ISPublicSubnet1
      LBCookieStickinessPolicy:
        - PolicyName: LBStickyPolicy
      Listeners:
        - LoadBalancerPort: '9763'
          InstancePort: '9763'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '4040'
          InstancePort: '4040'
          Protocol: HTTP
          InstanceProtocol: HTTP
          PolicyNames:
            - LBStickyPolicy
        - LoadBalancerPort: '9443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          PolicyNames:
            - LBStickyPolicy
          SSLCertificateId: !Join
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref CertificateName
      HealthCheck:
          Target: 'TCP:9763'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '10'
          Timeout: '5'
    DependsOn:
      - WSO2ISAnalyticsLoadBalancerSecurityGroup
Outputs:
  ISPortalURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2ISAnalyticsLoadBalancer
          - DNSName
        - ':9443/portal'
    Description: Identity Server Analytics Dashboard
  ISCarbonURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2ISLoadBalancer
          - DNSName
        - ':9443/carbon'
    Description: Identity Server Management Console URL
  ISAnalyticsURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WSO2ISAnalyticsLoadBalancer
          - DNSName
        - ':9443/carbon'
    Description: Identity Server Analytics Management Console URL
  SparkUIURL:
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - WSO2ISAnalyticsLoadBalancer
          - DNSName
        - ':4040/jobs'
    Description: Spark UI
Parameters:
  AWSAccessKeyId:
    Description: >-
      The AWS Access Key ID used for internal AWS CLI request calls
    Type: String
  AWSAccessKeySecret:
    Description: >-
      The AWS Access Key Secret for internal AWS CLI request calls
    Type: String
  KeyPairName:
    Description: >-
      The key pair to establish a SSH connection to the web servers. This should
      be already created.
    Type: 'AWS::EC2::KeyPair::KeyName'
  CertificateName:
    Description: A previously uploaded certificate to use at the Load Balancer Listeners.
    Type: String
    MinLength: 1
  WSO2InstanceType:
    Description: EC2 instance type of the WSO2 nodes
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.nano
      - t1.micro
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
    ConstraintDescription: must be a valid EC2 instance type
  JDK:
    Type: String
    Default: "jdk-8u144-linux-x64.tar.gz"
    Description: Target Java version
    AllowedValues:
      - jdk-8u144-linux-x64.tar.gz
  DBEngine:
    Type: String
    Default: "mysql"
    Description: Database Engine
    AllowedValues:
      - mysql
      - postgres
      - mariadb
      - sqlserver-ex
      - oracle-se
  DBEngineVersion:
    Type: String
    Default: "5.6.35"
    Description: Database Engine version
  WUMPassword:
    Type: String
    Default: ""
    NoEcho: true
    Description: Enter WUM user password to get the updated WSO2 products deployed. If not provided standard released pack will be deployed
  WUMUsername:
    Type: String
    Default: ""
    Description: Enter WUM user name
  DBUsername:
    Description: The username to be used in the WSO2 AM DB.
    Type: String
    Default: root
    MinLength: 4
    AllowedPattern: '[A-Za-z0-9\-]+'
  DBPassword:
    Description: The password to be used in the WSO2 AM DB.
    Type: String
    Default: wso2carbon
    MinLength: 8
    NoEcho: true
Mappings:
  WSO2PuppetMasterRegionMap:
    ap-northeast-1:
      Ubuntu140464bit: ami-to-be-added
    ap-northeast-2:
      Ubuntu140464bit: ami-to-be-added
    ap-south-1:
      Ubuntu140464bit: ami-to-be-added
    ap-southeast-1:
      Ubuntu140464bit: ami-to-be-added
    ap-southeast-2:
      Ubuntu140464bit: ami-to-be-added
    eu-central-1:
      Ubuntu140464bit: ami-to-be-added
    eu-west-1:
      Ubuntu140464bit: ami-to-be-added
    eu-west-2:
      Ubuntu140464bit: ami-to-be-added
    us-east-1:
      Ubuntu140464bit: ami-084564684a318dac9
    us-east-2:
      Ubuntu140464bit: ami-to-be-added
    us-west-1:
      Ubuntu140464bit: ami-to-be-added
    us-west-2:
      Ubuntu140464bit: ami-to-be-added
    ca-central-1:
      Ubuntu140464bit: ami-to-be-added
    sa-east-1:
      Ubuntu140464bit: ami-to-be-added
  WSO2ISAMIRegionMap:
    ap-northeast-1:
      Ubuntu140464bit: ami-to-be-added
    ap-northeast-2:
      Ubuntu140464bit: ami-to-be-added
    ap-south-1:
      Ubuntu140464bit: ami-to-be-added
    ap-southeast-1:
      Ubuntu140464bit: ami-to-be-added
    ap-southeast-2:
      Ubuntu140464bit: ami-to-be-added
    eu-central-1:
      Ubuntu140464bit: ami-to-be-added
    eu-west-1:
      Ubuntu140464bit: ami-to-be-added
    eu-west-2:
      Ubuntu140464bit: ami-to-be-added
    us-east-1:
      Ubuntu140464bit: ami-011a0a4aba1c14e99
    us-east-2:
      Ubuntu140464bit: ami-to-be-added
    us-west-1:
      Ubuntu140464bit: ami-to-be-added
    us-west-2:
      Ubuntu140464bit: ami-to-be-added
    ca-central-1:
      Ubuntu140464bit: ami-to-be-added
    sa-east-1:
      Ubuntu140464bit: ami-to-be-added
  WSO2ISAnalyticsAMIRegionMap:
    ap-northeast-1:
      Ubuntu140464bit: ami-to-be-added
    ap-northeast-2:
      Ubuntu140464bit: ami-to-be-added
    ap-south-1:
      Ubuntu140464bit: ami-to-be-added
    ap-southeast-1:
      Ubuntu140464bit: ami-to-be-added
    ap-southeast-2:
      Ubuntu140464bit: ami-to-be-added
    eu-central-1:
      Ubuntu140464bit: ami-to-be-added
    eu-west-1:
      Ubuntu140464bit: ami-to-be-added
    eu-west-2:
      Ubuntu140464bit: ami-to-be-added
    us-east-1:
      Ubuntu140464bit: ami-0ab1e54f223162007
    us-east-2:
      Ubuntu140464bit: ami-to-be-added
    us-west-1:
      Ubuntu140464bit: ami-to-be-added
    us-west-2:
      Ubuntu140464bit: ami-to-be-added
    ca-central-1:
      Ubuntu140464bit: ami-to-be-added
    sa-east-1:
      Ubuntu140464bit: ami-to-be-added
